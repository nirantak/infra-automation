---
- name: Use zsh for root user
  user:
    name: root
    shell: /bin/zsh
  become: true

- name: Use zsh for {{ ansible_user }} user
  user:
    name: "{{ ansible_user }}"
    shell: /bin/zsh
  become: true

- name: Clone oh-my-zsh and plugins
  git:
    repo: "{{ item.src }}"
    dest: "{{ item.dest }}"
    single_branch: true
    depth: 1
    version: master
  with_items:
    - { src: "https://github.com/ohmyzsh/ohmyzsh.git", dest: ~/.oh-my-zsh }
    - { src: "https://github.com/zsh-users/zsh-autosuggestions.git", dest: ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions }
    - { src: "https://github.com/zsh-users/zsh-syntax-highlighting.git", dest: ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting }

- name: Clone nirantak/dotfiles
  git:
    repo: https://github.com/nirantak/dotfiles.git
    dest: ~/dotfiles
    single_branch: true
    depth: 1
    version: main

- name: Link custom dotfiles
  file:
    src: "~/dotfiles/{{ item.src }}"
    dest: "~/{{ item.dest }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: link
    mode: "0644"
    force: true
  loop:
    - { src: shell/minimal.zshrc, dest: .zshrc }
    - { src: tools/.vimrc, dest: .vimrc }
    - { src: shell/.zshenv, dest: .zshenv }

- name: Download iterm2_shell_integration
  get_url:
    url: https://iterm2.com/shell_integration/zsh
    dest: ~/.iterm2_shell_integration.zsh
    mode: "0644"

- name: Clone pyenv and plugins
  git:
    repo: "{{ item.src }}"
    dest: "{{ item.dest }}"
    single_branch: true
    depth: 1
    version: master
  with_items:
    - { src: "https://github.com/pyenv/pyenv.git", dest: ~/.pyenv }
    - { src: "https://github.com/pyenv/pyenv-doctor.git", dest: ~/.pyenv/plugins/pyenv-doctor }
    - { src: "https://github.com/pyenv/pyenv-update.git", dest: ~/.pyenv/plugins/pyenv-update }
  when: install_python_version

- name: Reset connection so that pyenv config is picked up
  meta: reset_connection

- name: Install pyenv version {{ install_python_version }}
  shell:
    cmd: pyenv install {{ install_python_version }}
    creates: "~/.pyenv/versions/{{ install_python_version }}"
  when: install_python_version

- name: Set global pyenv version {{ install_python_version }}
  shell: pyenv global {{ install_python_version }}
  when: install_python_version

- name: Install python packages
  pip:
    name: "{{ item }}"
    state: latest
    executable: ~/.pyenv/shims/pip
  with_items:
    - pip
    - wheel
    - setuptools
    - ipython
    - httpie
  when: install_python_version
  tags:
    - update_packages
